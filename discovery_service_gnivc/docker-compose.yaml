version: '3'

services:

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: qwe123
    volumes:
      - ./keycloak/realms/autobahn_v1.json:/opt/keycloak/data/import/realm.json
    ports:
      - "8080:8080"
    command:
      - start-dev
      - --import-realm
      - --features admin-fine-grained-authz

  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    ports:
      - '15672:15672'
      - '5672:5672'

  postgres:
    container_name: gnivc_db
    image: 'postgres:15.1-alpine'
    ports:
      - "5436:5432"
    env_file:
      - .env
    networks:
      - test_network
    volumes:
      - db-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.4
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - test_network

  kafka:
    image: confluentinc/cp-kafka:6.2.4
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - test_network




networks:
  test_network:

volumes:
  minio:
  db-data:
    driver: local
