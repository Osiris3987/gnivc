version: '3'

services:

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: qwe123
    volumes:
      - ./keycloak/realms/autobahn_v1.json:/opt/keycloak/data/import/realm.json
    ports:
      - "8080:8080"
    command:
      - start-dev
      - --import-realm
      - --features admin-fine-grained-authz

  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    ports:
      - '15672:15672'
      - '5672:5672'

  postgres:
    container_name: gnivc_db
    image: 'postgres:15.1-alpine'
    ports:
      - "5436:5432"
    env_file:
      - .env
    networks:
      - test_network
    volumes:
      - db-data:/var/lib/postgresql/data

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    hostname: zookeeper
    container_name: ern_zookeeper
    restart: always
    ports:
      - 2181:2181
    networks:
      - test_network

  broker:
    image: 'confluentinc/cp-kafka:latest'
    hostname: broker
    depends_on:
      - zookeeper
    restart: always
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: broker
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_BROKER_ID: 0
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - test_network




networks:
  test_network:

volumes:
  minio:
  db-data:
    driver: local
